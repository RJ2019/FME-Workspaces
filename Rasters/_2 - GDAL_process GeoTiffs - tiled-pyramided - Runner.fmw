#! <?xml version="1.0" encoding="windows-1252" ?>
#! <WORKSPACE
#    
#    
#    Command-line to run this workspace:
#    
#    
#    fme.exe "GDAL_process GeoTiffs - Runner.fmw"
#          --SourceDataset_PATH D:\Raster_Outputs
#    
#    
#! PASSWORD=""
#! GRID_VISIBLE="false"
#! VIEW_POSITION="0 0"
#! SHOW_INFO_NODES="true"
#! ATTR_TYPE_ENCODING="SDF"
#! FME_STROKE_MAX_DEVIATION="0"
#! GRID_SNAPTO="true"
#! BEGIN_PYTHON=""
#! FME_GEOMETRY_HANDLING="Enhanced"
#! DESCRIPTION=""
#! GRID_HEIGHT="50"
#! TITLE=""
#! SHOW_BOOKMARKS="true"
#! MAX_LOG_FEATURES="200"
#! END_TCL=""
#! FME_BUILD_NUM="13545"
#! ZOOM_SCALE="100"
#! CATEGORY=""
#! REDIRECT_TERMINATORS="NONE"
#! LEGAL_TERMS_CONDITIONS=""
#! FME_REPROJECTION_ENGINE="FME"
#! USAGE=""
#! END_PYTHON=""
#! HISTORY=""
#! GRID_WIDTH="50"
#! REQUIREMENTS_KEYWORD=""
#! SOURCE_ROUTING_FILE=""
#! DESTINATION_ROUTING_FILE=""
#! DESTINATION="NONE"
#! LAST_SAVE_DATE="2013-10-24T13:11:17"
#! FME_IMPLICIT_CSMAP_REPROJECTION_MODE="Datum"
#! WORKSPACE_VERSION="1"
#! SOURCE="NONE"
#! LAST_SAVE_BUILD="FME(R) 2013 SP4 (20131002 - Build 13545 - WIN64)"
#! FME_SERVER_SERVICES=""
#! LOG_MAX_RECORDED_FEATURES="200"
#! LOG_FILE=""
#! REQUIREMENTS=""
#! BEGIN_TCL=""
#! SHOW_ANNOTATIONS="true"
#! VIEW_PAGE_BREAKS="false"
#! IGNORE_READER_FAILURE="No"
#! WARN_INVALID_XFORM_PARAM="Yes"
#! >
#! <DATASETS>
#! <DATASET
#! IS_SOURCE="true"
#! ROLE="READER"
#! FORMAT="PATH"
#! DATASET="$(SourceDataset_PATH)"
#! KEYWORD="PATH_1"
#! MULTI_GEOM_ALLOWED="false"
#! ATTR_MAX_LENGTH="60"
#! ATTR_CASE="ANY"
#! ALLOWED_FEAT_TYPES=""
#! WRITE_DEFS="false"
#! DEFLINE_TEMPLATE=""
#! DEFLINE_ATTRS="false"
#! EXPOSABLE_ATTRS="fme_text_size number(31,15) fme_rotation number(31,15) fme_feature_type char(50) multi_reader_keyword char(50) multi_reader_id number(11,0) fme_dataset char(50) multi_reader_full_id number(11,0) fme_geometry fme_char(50) multi_reader_type char(50) fme_fill_color char(50) path_geom char(13) fme_basename char(50) fme_text_string char(50) fme_secondary_axis number(31,15) fme_primary_axis number(31,15) fme_sweep_angle number(31,15) fme_start_angle number(31,15) fme_type char(50) fme_color char(50)"
#! DEFLINE_PARMS=""
#! ATTR_INDEX_TYPES=""
#! ATTR_NAME_INVALID_CHARS=""
#! SUPPORTS_FEATURE_TYPE_FANOUT="true"
#! ENABLED="true"
#! DYNAMIC_FEATURE_TYPES_LIST_ON_MERGE="true"
#! GENERATE_FME_BUILD_NUM="12235"
#! MAX_FEATURES=""
#! COORDSYS=""
#! MIN_FEATURES=""
#! FEATURE_TYPES=""
#! START_FEATURE=""
#! />
#! </DATASETS>
#! <DATA_TYPES>
#! <DATA_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="char(width)"
#! FME_TYPE="fme_char(width)"
#! FORMAT="PATH"
#! />
#! <DATA_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="char(width)"
#! FME_TYPE="fme_varchar(width)"
#! FORMAT="PATH"
#! />
#! <DATA_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="buffer"
#! FME_TYPE="fme_buffer"
#! FORMAT="PATH"
#! />
#! <DATA_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="char(20)"
#! FME_TYPE="fme_datetime"
#! FORMAT="PATH"
#! />
#! <DATA_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="char(12)"
#! FME_TYPE="fme_time"
#! FORMAT="PATH"
#! />
#! <DATA_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="date"
#! FME_TYPE="fme_date"
#! FORMAT="PATH"
#! />
#! <DATA_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="number(31,15)"
#! FME_TYPE="fme_real64"
#! FORMAT="PATH"
#! />
#! <DATA_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="number(15,7)"
#! FME_TYPE="fme_real32"
#! FORMAT="PATH"
#! />
#! <DATA_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="number(11,0)"
#! FME_TYPE="fme_int32"
#! FORMAT="PATH"
#! />
#! <DATA_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="number(11,0)"
#! FME_TYPE="fme_uint32"
#! FORMAT="PATH"
#! />
#! <DATA_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="number(11,0)"
#! FME_TYPE="fme_int64"
#! FORMAT="PATH"
#! />
#! <DATA_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="number(11,0)"
#! FME_TYPE="fme_uint64"
#! FORMAT="PATH"
#! />
#! <DATA_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="logical"
#! FME_TYPE="fme_boolean"
#! FORMAT="PATH"
#! />
#! <DATA_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="number(6,0)"
#! FME_TYPE="fme_int16"
#! FORMAT="PATH"
#! />
#! <DATA_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="number(6,0)"
#! FME_TYPE="fme_uint16"
#! FORMAT="PATH"
#! />
#! <DATA_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="number(width,decimal)"
#! FME_TYPE="fme_decimal(width,decimal)"
#! FORMAT="PATH"
#! />
#! </DATA_TYPES>
#! <GEOM_TYPES>
#! <GEOM_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="path_none"
#! FME_TYPE="fme_no_geom"
#! FORMAT="PATH"
#! />
#! <GEOM_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="path_none"
#! FME_TYPE="fme_point"
#! FORMAT="PATH"
#! />
#! <GEOM_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="path_none"
#! FME_TYPE="fme_line"
#! FORMAT="PATH"
#! />
#! <GEOM_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="path_none"
#! FME_TYPE="fme_area"
#! FORMAT="PATH"
#! />
#! <GEOM_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="path_none"
#! FME_TYPE="fme_text"
#! FORMAT="PATH"
#! />
#! <GEOM_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="path_none"
#! FME_TYPE="fme_ellipse"
#! FORMAT="PATH"
#! />
#! <GEOM_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="path_none"
#! FME_TYPE="fme_arc"
#! FORMAT="PATH"
#! />
#! <GEOM_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="path_none"
#! FME_TYPE="fme_rectangle"
#! FORMAT="PATH"
#! />
#! <GEOM_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="path_none"
#! FME_TYPE="fme_rounded_rectangle"
#! FORMAT="PATH"
#! />
#! <GEOM_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="path_none"
#! FME_TYPE="fme_collection"
#! FORMAT="PATH"
#! />
#! <GEOM_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="path_none"
#! FME_TYPE="fme_raster"
#! FORMAT="PATH"
#! />
#! <GEOM_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="path_none"
#! FME_TYPE="fme_surface"
#! FORMAT="PATH"
#! />
#! <GEOM_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="path_none"
#! FME_TYPE="fme_solid"
#! FORMAT="PATH"
#! />
#! <GEOM_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="path_none"
#! FME_TYPE="fme_point_cloud"
#! FORMAT="PATH"
#! />
#! </GEOM_TYPES>
#! <FEATURE_TYPES>
#! <FEATURE_TYPE
#! IS_SOURCE="true"
#! NODE_NAME="PATH"
#! IS_EDITABLE="false"
#! IDENTIFIER="1"
#! FEAT_GEOMTYPE="path_none"
#! POSITION="200 -550"
#! ORDER="7"
#! COLLAPSED="false"
#! KEYWORD="PATH_1"
#! ENABLED="true"
#! HIDDEN_USER_ATTRS=""
#! MERGE="false"
#! MERGE_FILTER=""
#! MERGE_FILTER_TYPE="FILTER_TYPE_GLOB"
#! MERGE_FILTER_CASE_SENSITIVE="false"
#! DYNAMIC_SCHEMA="false"
#! >
#! <FEAT_ATTRIBUTE ATTR_NAME="path_unix" ATTR_TYPE="buffer"/>
#! <FEAT_ATTRIBUTE ATTR_NAME="path_windows" ATTR_TYPE="buffer"/>
#! <FEAT_ATTRIBUTE ATTR_NAME="path_rootname" ATTR_TYPE="buffer"/>
#! <FEAT_ATTRIBUTE ATTR_NAME="path_filename" ATTR_TYPE="buffer"/>
#! <FEAT_ATTRIBUTE ATTR_NAME="path_extension" ATTR_TYPE="buffer"/>
#! <FEAT_ATTRIBUTE ATTR_NAME="path_filesize" ATTR_TYPE="buffer"/>
#! <FEAT_ATTRIBUTE ATTR_NAME="path_ownername" ATTR_TYPE="buffer"/>
#! <FEAT_ATTRIBUTE ATTR_NAME="path_readonly" ATTR_TYPE="buffer"/>
#! <FEAT_ATTRIBUTE ATTR_NAME="path_modified_date" ATTR_TYPE="date"/>
#! <FEAT_ATTRIBUTE ATTR_NAME="path_created_date" ATTR_TYPE="date"/>
#! <FEAT_ATTRIBUTE ATTR_NAME="path_accessed_date" ATTR_TYPE="date"/>
#! <FEAT_ATTRIBUTE ATTR_NAME="path_directory_unix" ATTR_TYPE="buffer"/>
#! <FEAT_ATTRIBUTE ATTR_NAME="path_directory_windows" ATTR_TYPE="buffer"/>
#! <FEAT_ATTRIBUTE ATTR_NAME="path_type" ATTR_TYPE="char(10)"/>
#! </FEATURE_TYPE>
#! </FEATURE_TYPES>
#! <FMESERVER>
#! </FMESERVER>
#! <GLOBAL_PARAMETERS>
#! <GLOBAL_PARAMETER
#! GUI_LINE="GUI MULTIDIR SourceDataset_PATH Source Directory and File Pathnames Directory:"
#! DEFAULT_VALUE="D:\Raster_Outputs"
#! IS_STAND_ALONE="false"
#! />
#! </GLOBAL_PARAMETERS>
#! <COMMENTS>
#! <COMMENT
#! IDENTIFIER="25"
#! COMMENT_VALUE="Directory/file reader"
#! POSITION="200 -450"
#! ORDER="3"
#! FOLLOW_ANCHOR="true"
#! INFO_NODE="false"
#! COMMENT_TYPE="REGULAR"
#! ANCHORED_NODE="1"
#! />
#! <COMMENT
#! IDENTIFIER="9"
#! COMMENT_VALUE="Created by Jonathan Moules&#13;&#10;&#13;&#10;This workspace simply runs a workspace against&#13;&#10;all TIF raster files in a specified location.&#13;&#10;&#13;&#10;That workspace:&#13;&#10;- Creates a copied tiled GeoTIFF&#13;&#10;- Creates the right number of pyramids within that tiled file."
#! POSITION="100 -50"
#! ORDER="8"
#! FOLLOW_ANCHOR="true"
#! INFO_NODE="false"
#! COMMENT_TYPE="REGULAR"
#! />
#! <COMMENT
#! IDENTIFIER="10"
#! COMMENT_VALUE="HOW TO USE&#13;&#10;Assuming the OS_Raster_Creator_RUNNER workspace was run already.&#13;&#10;&#13;&#10;Make sure that it has finished processing, including creating VML (takes a few hours)&#13;&#10;&#13;&#10;Just press &quot;play&quot;."
#! POSITION="1200 -50"
#! ORDER="9"
#! FOLLOW_ANCHOR="true"
#! INFO_NODE="false"
#! COMMENT_TYPE="REGULAR"
#! />
#! </COMMENTS>
#! <CONSTANTS>
#! </CONSTANTS>
#! <BOOKMARKS>
#! </BOOKMARKS>
#! <TRANSFORMERS>
#! <TRANSFORMER
#! IDENTIFIER="15"
#! TYPE="Logger"
#! VERSION="2"
#! POSITION="1800 -500"
#! ORDER="5"
#! PARMS_EDITED="false"
#! ENABLED="true"
#! >
#! <XFORM_PARM PARM_NAME="MESSAGE" PARM_VALUE="Feature is:"/>
#! <XFORM_PARM PARM_NAME="FEATURE_TYPE" PARM_VALUE=""/>
#! <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="Logger"/>
#! <XFORM_PARM PARM_NAME="MAXFEATS" PARM_VALUE="20"/>
#! <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#! <XFORM_PARM PARM_NAME="PARAMETERS_GROUP" PARM_VALUE=""/>
#! <XFORM_PARM PARM_NAME="MAXCOORDS" PARM_VALUE="20"/>
#! </TRANSFORMER>
#! <TRANSFORMER
#! IDENTIFIER="22"
#! TYPE="Logger"
#! VERSION="2"
#! POSITION="1800 -750"
#! ORDER="6"
#! PARMS_EDITED="false"
#! ENABLED="true"
#! >
#! <XFORM_PARM PARM_NAME="MESSAGE" PARM_VALUE="Feature is:"/>
#! <XFORM_PARM PARM_NAME="FEATURE_TYPE" PARM_VALUE=""/>
#! <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="Logger_2"/>
#! <XFORM_PARM PARM_NAME="MAXFEATS" PARM_VALUE="20"/>
#! <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#! <XFORM_PARM PARM_NAME="PARAMETERS_GROUP" PARM_VALUE=""/>
#! <XFORM_PARM PARM_NAME="MAXCOORDS" PARM_VALUE="20"/>
#! </TRANSFORMER>
#! <TRANSFORMER
#! IDENTIFIER="34"
#! TYPE="WorkspaceRunner"
#! VERSION="1"
#! POSITION="950 -550"
#! ORDER="4"
#! PARMS_EDITED="true"
#! ENABLED="true"
#! >
#! <OUTPUT_FEAT NAME="SUCCEEDED"/>
#! <FEAT_COLLAPSED COLLAPSED="0"/>
#! <XFORM_ATTR ATTR_NAME="path_unix" IS_USER_CREATED="false" FEAT_INDEX="0"/>
#! <XFORM_ATTR ATTR_NAME="path_windows" IS_USER_CREATED="false" FEAT_INDEX="0"/>
#! <XFORM_ATTR ATTR_NAME="path_rootname" IS_USER_CREATED="false" FEAT_INDEX="0"/>
#! <XFORM_ATTR ATTR_NAME="path_filename" IS_USER_CREATED="false" FEAT_INDEX="0"/>
#! <XFORM_ATTR ATTR_NAME="path_extension" IS_USER_CREATED="false" FEAT_INDEX="0"/>
#! <XFORM_ATTR ATTR_NAME="path_filesize" IS_USER_CREATED="false" FEAT_INDEX="0"/>
#! <XFORM_ATTR ATTR_NAME="path_ownername" IS_USER_CREATED="false" FEAT_INDEX="0"/>
#! <XFORM_ATTR ATTR_NAME="path_readonly" IS_USER_CREATED="false" FEAT_INDEX="0"/>
#! <XFORM_ATTR ATTR_NAME="path_modified_date" IS_USER_CREATED="false" FEAT_INDEX="0"/>
#! <XFORM_ATTR ATTR_NAME="path_created_date" IS_USER_CREATED="false" FEAT_INDEX="0"/>
#! <XFORM_ATTR ATTR_NAME="path_accessed_date" IS_USER_CREATED="false" FEAT_INDEX="0"/>
#! <XFORM_ATTR ATTR_NAME="path_directory_unix" IS_USER_CREATED="false" FEAT_INDEX="0"/>
#! <XFORM_ATTR ATTR_NAME="path_directory_windows" IS_USER_CREATED="false" FEAT_INDEX="0"/>
#! <XFORM_ATTR ATTR_NAME="path_type" IS_USER_CREATED="false" FEAT_INDEX="0"/>
#! <OUTPUT_FEAT NAME="FAILED"/>
#! <FEAT_COLLAPSED COLLAPSED="1"/>
#! <XFORM_ATTR ATTR_NAME="path_unix" IS_USER_CREATED="false" FEAT_INDEX="1"/>
#! <XFORM_ATTR ATTR_NAME="path_windows" IS_USER_CREATED="false" FEAT_INDEX="1"/>
#! <XFORM_ATTR ATTR_NAME="path_rootname" IS_USER_CREATED="false" FEAT_INDEX="1"/>
#! <XFORM_ATTR ATTR_NAME="path_filename" IS_USER_CREATED="false" FEAT_INDEX="1"/>
#! <XFORM_ATTR ATTR_NAME="path_extension" IS_USER_CREATED="false" FEAT_INDEX="1"/>
#! <XFORM_ATTR ATTR_NAME="path_filesize" IS_USER_CREATED="false" FEAT_INDEX="1"/>
#! <XFORM_ATTR ATTR_NAME="path_ownername" IS_USER_CREATED="false" FEAT_INDEX="1"/>
#! <XFORM_ATTR ATTR_NAME="path_readonly" IS_USER_CREATED="false" FEAT_INDEX="1"/>
#! <XFORM_ATTR ATTR_NAME="path_modified_date" IS_USER_CREATED="false" FEAT_INDEX="1"/>
#! <XFORM_ATTR ATTR_NAME="path_created_date" IS_USER_CREATED="false" FEAT_INDEX="1"/>
#! <XFORM_ATTR ATTR_NAME="path_accessed_date" IS_USER_CREATED="false" FEAT_INDEX="1"/>
#! <XFORM_ATTR ATTR_NAME="path_directory_unix" IS_USER_CREATED="false" FEAT_INDEX="1"/>
#! <XFORM_ATTR ATTR_NAME="path_directory_windows" IS_USER_CREATED="false" FEAT_INDEX="1"/>
#! <XFORM_ATTR ATTR_NAME="path_type" IS_USER_CREATED="false" FEAT_INDEX="1"/>
#! <XFORM_ATTR ATTR_NAME="_failure_message" IS_USER_CREATED="false" FEAT_INDEX="1"/>
#! <OUTPUT_FEAT NAME="SUMMARY"/>
#! <FEAT_COLLAPSED COLLAPSED="2"/>
#! <XFORM_ATTR ATTR_NAME="_proc_count" IS_USER_CREATED="false" FEAT_INDEX="2"/>
#! <XFORM_ATTR ATTR_NAME="_processes{}" IS_USER_CREATED="false" FEAT_INDEX="2"/>
#! <XFORM_PARM PARM_NAME="WORKSPACE_FILE" PARM_VALUE="$(FME_MF_DIR)GDAL_process GeoTiffs.fmw"/>
#! <XFORM_PARM PARM_NAME="PARAMETER_TYPES" PARM_VALUE="MULTIFILE,DIRNAME_SRC"/>
#! <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="WorkspaceRunner_2"/>
#! <XFORM_PARM PARM_NAME="BLOCKING" PARM_VALUE="No"/>
#! <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#! <XFORM_PARM PARM_NAME="PARAMETERS_GROUP" PARM_VALUE=""/>
#! <XFORM_PARM PARM_NAME="WORKSPACE_PARAMETERS" PARM_VALUE="SourceDataset_GEOTIFF,&lt;at&gt;Value&lt;openparen&gt;path_windows&lt;closeparen&gt;,gdal_dir,C:&lt;backslash&gt;Program&lt;space&gt;Files&lt;backslash&gt;GDAL"/>
#! <XFORM_PARM PARM_NAME="MAX_PROC" PARM_VALUE="8"/>
#! </TRANSFORMER>
#! </TRANSFORMERS>
#! <FEAT_LINKS>
#! <FEAT_LINK
#! IDENTIFIER="36"
#! SOURCE_NODE="34"
#! TARGET_NODE="15"
#! SOURCE_PORT_DESC="fo 0"
#! TARGET_PORT_DESC="fi 0"
#! ENABLED="true"
#! EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#! IDENTIFIER="37"
#! SOURCE_NODE="34"
#! TARGET_NODE="22"
#! SOURCE_PORT_DESC="fo 1"
#! TARGET_PORT_DESC="fi 0"
#! ENABLED="true"
#! EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#! IDENTIFIER="21"
#! SOURCE_NODE="1"
#! TARGET_NODE="34"
#! SOURCE_PORT_DESC="-1"
#! TARGET_PORT_DESC="fi 0"
#! ENABLED="true"
#! EXTRA_POINTS=""
#! />
#! </FEAT_LINKS>
#! <BREAKPOINTS>
#! </BREAKPOINTS>
#! <ATTR_LINKS>
#! </ATTR_LINKS>
#! <SUBDOCUMENTS>
#! </SUBDOCUMENTS>
#! <LOOKUP_TABLES>
#! </LOOKUP_TABLES>
#! </WORKSPACE>
#! 
GUI IGNORE PATH_IN_GLOB_PATTERN_PATH_1,PATH_IN_TYPE_PATH_1,PATH_IN_RETRIEVE_FILE_PROPERTIES_PATH_1,SourceDataset_PATH_1

DEFAULT_MACRO SourceDataset_PATH D:\Raster_Outputs
GUI MULTIDIR SourceDataset_PATH Source Directory and File Pathnames Directory:
INCLUDE TCL
proc __FME_ExpandMacros {text {maxlevels 100}} {
   if { $maxlevels <= 0 } { return $text; }
   set pattern [join {{\$} {\([^()$]*\)}} {}]
   set indices [regexp -inline -all -indices $pattern $text]
   if [llength $indices] {
      foreach pair [lreverse $indices] {
         lassign $pair start end
         set replacement {}
         set replacement $::FME_MacroValues([string range $text [expr $start + 2] [expr $end - 1]])
         set text [string replace $text $start $end $replacement]
      }
      return [__FME_ExpandMacros $text [expr $maxlevels - 1]]
   }
   return $text
}

proc __FME_ExpandEnvVars {text {maxlevels 100}} {
   if { $maxlevels <= 0 } { return $text; }
   set pattern [join {{\$} {\{[^\{\}$]*\}}} {}]
   set indices [regexp -inline -all -indices $pattern $text]
   if [llength $indices] {
      foreach pair [lreverse $indices] {
         lassign $pair start end
         set replacement {}
         set replacement $::env([string range $text [expr $start + 2] [expr $end - 1]])
         set text [string replace $text $start $end $replacement]
      }
      return [__FME_ExpandEnvVars $text [expr $maxlevels - 1]]
   }
   return $text
}

proc __FME_EvalAndEncodeMacro {macroName} {
   set macroVal {}
   catch { set macroVal [__FME_ExpandMacros $::FME_MacroValues($macroName)] }
   catch { set macroVal [__FME_ExpandEnvVars $macroVal] }
    if {[string equal -length 15 {FME_CONDITIONAL} $macroVal ] == 0} {
        return [FME_EncodeText $macroVal];
    }
   return $macroVal; 
}
END_INCLUDE
INCLUDE [	puts "MACRO SourceDataset_PATH__FMEENCODED__ [__FME_EvalAndEncodeMacro SourceDataset_PATH]" ; ]

INCLUDE [ if {{$(SourceDataset_PATH)} == {}} { puts_real {Parameter 'SourceDataset_PATH' must be given a value.}; exit 1; }; ]
#! START_HEADER
#! START_WB_HEADER
READER_TYPE PATH
READER_KEYWORD PATH_1
READER_GEN_DIRECTIVES TYPE,ANY,RETRIEVE_FILE_PROPERTIES,NO,_MERGE_SCHEMAS,YES,GLOB_PATTERN,*
WRITER_TYPE NULL
WRITER_KEYWORD NULL_DEST
NULL_DEST_DATASET null
#! END_WB_HEADER
#! START_WB_HEADER
MACRO WB_KEYWORD "PATH_1"
#! END_WB_HEADER
#! START_SOURCE_HEADER PATH PATH_1
# =============================================================================
DEFAULT_MACRO PATH_IN_GLOB_PATTERN_PATH_1 *.tif
PATH_1_GLOB_PATTERN "$(PATH_IN_GLOB_PATTERN_PATH_1)"
GUI OPTIONAL TEXT PATH_IN_GLOB_PATTERN_PATH_1 Path Filter:
# =============================================================================
DEFAULT_MACRO PATH_IN_TYPE_PATH_1 FILE
PATH_1_TYPE "$(PATH_IN_TYPE_PATH_1)"
GUI CHOICE PATH_IN_TYPE_PATH_1 ANY%DIRECTORY%FILE Allowed Path Type:
# =============================================================================
DEFAULT_MACRO PATH_IN_RETRIEVE_FILE_PROPERTIES_PATH_1 NO
PATH_1_RETRIEVE_FILE_PROPERTIES "$(PATH_IN_RETRIEVE_FILE_PROPERTIES_PATH_1)"
GUI CHOICE PATH_IN_RETRIEVE_FILE_PROPERTIES_PATH_1 YES%NO Retrieve file properties:
# =====================================================================
# The following GUI line prompts for the directory from which to
# read
# The dataset this mapping file was generated from was:
#! END_SOURCE_HEADER
#! START_WB_HEADER
DEFAULT_MACRO SourceDataset
INCLUDE [ if {{$(SourceDataset)} != ""} {                        \
 puts {DEFAULT_MACRO SourceDataset_PATH_1 $(SourceDataset)}     \
 } ]
#! END_WB_HEADER
#! START_SOURCE_HEADER PATH PATH_1
DEFAULT_MACRO SourceDataset_PATH_1 $(SourceDataset_PATH)
GUI MULTIDIR SourceDataset_PATH_1 Source Directory and File Pathnames Directory:
PATH_1_DATASET "$(SourceDataset_PATH_1)"
#! END_SOURCE_HEADER
#! END_HEADER

LOG_FILENAME "$(FME_MF_DIR)GDAL_process GeoTiffs - Runner.log"
LOG_APPEND NO
LOG_MAX_FEATURES 200
LOG_MAX_RECORDED_FEATURES 200
FME_REPROJECTION_ENGINE FME
FME_IMPLICIT_CSMAP_REPROJECTION_MODE Datum
FME_GEOMETRY_HANDLING Enhanced
FME_STROKE_MAX_DEVIATION 0
LOG_TIMINGS YES
LOG_FILTER_MASK -1
DEFAULT_MACRO DATASET_KEYWORD_PATH_1 PATH_1
# -------------------------------------------------------------------------

PATH_1_READER_META_ATTRIBUTES fme_feature_type

# -------------------------------------------------------------------------

MULTI_READER_CONTINUE_ON_READER_FAILURE No

# -------------------------------------------------------------------------

MACRO WORKSPACE_NAME GDAL_process GeoTiffs - Runner
MACRO FME_VIEWER_APP fmedatainspector
# -------------------------------------------------------------------------

INCLUDE [ if {[info exists env(FME_TEMP)] && [file isdirectory $env(FME_TEMP)]} {set gVisualizerTemp $env(FME_TEMP)}  elseif {[info exists env(TEMP)] && [file isdirectory $env(TEMP)]}  {set gVisualizerTemp $env(TEMP)}  elseif { $tcl_platform(platform) == "unix" } {set gVisualizerTemp "/tmp"} else {set gVisualizerTemp c:};  regsub -all {[ ,&]} {$(WORKSPACE_NAME)} {_} wsname; set gVisualizerTemp $gVisualizerTemp/${wsname}_[clock format [clock seconds] -format %H%M%S];  puts "MACRO WORKSPACE_TEMP_DIR $gVisualizerTemp"; 
MACRO VISUALIZER_FEATURE_FILE $(WORKSPACE_TEMP_DIR)/inspector.ffs
MACRO VISUALIZER_SCHEMA_FILE $(WORKSPACE_TEMP_DIR)/inspector.fsc
MACRO VISUALIZER_CREATE_SPATIAL_INDEX YES

# -------------------------------------------------------------------------

Lookup ___KnownFeatureTypes___   PATH yes   "" no
# -------------------------------------------------------------------------

FACTORY_DEF * TestFactory   FACTORY_NAME "Unexpected Input Remover"   INPUT FEATURE_TYPE *   TEST @Lookup(___KnownFeatureTypes___,@FeatureType()) == yes   OUTPUT PASSED FEATURE_TYPE *
# -------------------------------------------------------------------------

FACTORY_DEF * TeeFactory    FACTORY_NAME "Source -> Generic"    INPUT FEATURE_TYPE *    OUTPUT FEATURE_TYPE *       @Transform(PATH,FME_GENERIC,PRESERVE_GEOMETRY)
DEFAULT_MACRO WB_CURRENT_CONTEXT
# -------------------------------------------------------------------------

# Convert the workspace name to one containing only / -- Tcl likes this better
# (and so do I)

# And determine the "NULL" device so we can ensure we don't get stray output
# messing up our stdout if we are running workspaces in the background
# See http://wiki.tcl.tk/1649 for a description of the tcl_platform
# variable, the "platform" part seems to have valid values windows, unix, and
# macintosh (the latter of which is actually pre-OS X)

Tcl2 if { $tcl_platform(platform) == {windows} } {         set null_device {NUL:};      } else {         set null_device {/dev/null};      };
Tcl2 proc WorkspaceRunner_2_4f7c3f44_cc3c_4a0a_9249_a524c343f2794_runner { parmListString workspaceFile } {    set workspaceFileUnix [regsub -all {\\} $workspaceFile {/}];    set parmListString [string trim $parmListString {()}];    set comment {        Build up the command line in a list, which we'll "eval" to get        at its pieces when we actually execute the "exec".    };    lappend commandArguments {$(FME_HOME_UNIX)/fme}                             $workspaceFileUnix;    set parmList [split $parmListString {,}];    foreach {parmName encodedValue} $parmList {       set comment {           Decode both the parameter name (which we'd never expect to need it but could)           as well as the parameter value (which is very likely encoded to guard it from the parser)           and append them each to a new list which will be passed           as the arguments to the exec function.  Note that the           parameter names need to be turned into macro settings by           prepending them with --           Note also that the WorkspaceRunner sometimes encodes attribute           dereferences by placing <amp> at the beginning rather than using @Value.           Further note that string range forgives if the ending index is > the length of           the string, so we can just ask for the first 5 characters           when we're checking for <amp>.       };       lappend commandArguments \"--$parmName\";       set comment {           for backwards compatibility, replace first <amp>       };       if { [string range $encodedValue 0 4] == {<amp>} &&            [string length $encodedValue] > 5 } {           set encodedValue [string replace $encodedValue 0 4 {<at>Value<openparen>}]];           append encodedValue "<closeparen>";       };       set comment {  for backwards compatibility, call decode text or attr.  };       set encodedValue [FME_DecodeTextOrAttr $encodedValue];       lappend commandArguments $encodedValue;    };    set comment {        Now optionally run this in a detached way if we were not supposed        to wait by adding & on the end to put it in the background.  And        at the same time, ensure that any stray stdout/stderr is routed to        null.    };    if { {No} == {No} } {        global null_device;        lappend commandArguments \">$null_device\";        FME_LogMessage fme_inform \"WorkspaceRunner_2: Initiating run of FME Workspace $workspaceFile with command line:\";    } else {        FME_LogMessage fme_inform \"WorkspaceRunner_2: Running FME Workspace $workspaceFile with command line:\";    };    set comment {        The below 2>@1 forces any standard error output to go into the msg variable        or to NULL if we're running in the background.    };    lappend commandArguments {2>@1};    if { {No} == {No} } {        lappend commandArguments {&};    };    FME_LogMessage fme_inform [concat WorkspaceRunner_2: $commandArguments];    if { {No} == {No} } {       after 1000;       while { [FME_CanSpawnFme 8] == {0} } {             after 2000;       };    };    if {[catch {eval [concat exec $commandArguments] } msg ]} {       set msg [regsub {\015*\012child[^\012]*$} $msg {}];       FME_LogMessage fme_warn \"WorkspaceRunner_2: Failed to run workspace $workspaceFileUnix -- Trace was:\n\n$msg\n\";       FME_SetAttribute _failure_message $msg;       return FAILURE;    } else {       global WorkspaceRunner_2_4f7c3f44_cc3c_4a0a_9249_a524c343f2794_process_count;       incr WorkspaceRunner_2_4f7c3f44_cc3c_4a0a_9249_a524c343f2794_process_count;       if { {No} == {No} } {           FME_LogMessage fme_inform \"WorkspaceRunner_2: Successfully initiated run of workspace $workspaceFile\";           global WorkspaceRunner_2_4f7c3f44_cc3c_4a0a_9249_a524c343f2794_all_processes;           lappend WorkspaceRunner_2_4f7c3f44_cc3c_4a0a_9249_a524c343f2794_all_processes $msg;       } else {           FME_LogMessage fme_inform \"WorkspaceRunner_2: Successfully ran workspace $workspaceFile\";       };       return SUCCESS;    }; }
FACTORY_DEF * TestFactory    FACTORY_NAME WorkspaceRunner_2_ExecutorAndRouter    INPUT  FEATURE_TYPE PATH    TEST @Tcl2("WorkspaceRunner_2_4f7c3f44_cc3c_4a0a_9249_a524c343f2794_runner {(SourceDataset_GEOTIFF,@EvaluateExpression(STRING_ENCODED,<at>Value<openparen>path_windows<closeparen>,WorkspaceRunner_2),gdal_dir,C:<backslash>Program<space>Files<backslash>GDAL)} {@EvaluateExpression(STRING,$(FME_MF_DIR_ENCODED)GDAL_process<space>GeoTiffs.fmw,WorkspaceRunner_2)}") == SUCCESS    OUTPUT PASSED FEATURE_TYPE WorkspaceRunner_2_SUCCEEDED    OUTPUT FAILED FEATURE_TYPE WorkspaceRunner_2_FAILED
Tcl2 proc WorkspaceRunner_2_4f7c3f44_cc3c_4a0a_9249_a524c343f2794_summarizer { } {     global WorkspaceRunner_2_4f7c3f44_cc3c_4a0a_9249_a524c343f2794_process_count;     set comment { incr 0 creates the variable if it wasn't present };     incr WorkspaceRunner_2_4f7c3f44_cc3c_4a0a_9249_a524c343f2794_process_count 0;     FME_SetAttribute _proc_count $WorkspaceRunner_2_4f7c3f44_cc3c_4a0a_9249_a524c343f2794_process_count;     global WorkspaceRunner_2_4f7c3f44_cc3c_4a0a_9249_a524c343f2794_all_processes;     if {[info exists WorkspaceRunner_2_4f7c3f44_cc3c_4a0a_9249_a524c343f2794_all_processes]} {         set index 0;         foreach pid $WorkspaceRunner_2_4f7c3f44_cc3c_4a0a_9249_a524c343f2794_all_processes {             FME_SetAttribute \"_processes{$index}\" $pid;             incr index;         }     } }
FACTORY_DEF * CreationFactory    FACTORY_NAME WorkspaceRunner_2_SummaryMaker    CREATE_AT_END yes

# -------------------------------------------------------------------------

FACTORY_DEF * TeeFactory    FACTORY_NAME Logger_2_Logger    INPUT  FEATURE_TYPE WorkspaceRunner_2_FAILED    OUTPUT FEATURE_TYPE * @FeatureType("") @Log("Logger_2: Feature is:",20,20) @FeatureType(__NUKE_LOGGED__)
FACTORY_DEF * TeeFactory    FACTORY_NAME Logger_2_Nuker    INPUT FEATURE_TYPE __NUKE_LOGGED__

# -------------------------------------------------------------------------

FACTORY_DEF * TeeFactory    FACTORY_NAME Logger_Logger    INPUT  FEATURE_TYPE WorkspaceRunner_2_SUCCEEDED    OUTPUT FEATURE_TYPE * @FeatureType("") @Log("Logger: Feature is:",20,20) @FeatureType(__NUKE_LOGGED__)
FACTORY_DEF * TeeFactory    FACTORY_NAME Logger_Nuker    INPUT FEATURE_TYPE __NUKE_LOGGED__

# -------------------------------------------------------------------------

FACTORY_DEF * TestFactory   FACTORY_NAME "Final Output Feature Type Router"   INPUT FEATURE_TYPE *   TEST @Value(__wb_out_feat_type__) != ""   OUTPUT PASSED FEATURE_TYPE *     @FeatureType(@Value(__wb_out_feat_type__))   OUTPUT FAILED FEATURE_TYPE __nuke_me__ @Tcl2("FME_StatMessage 818059 [FME_GetAttribute fme_template_feature_type] 818060 818061 fme_warn")
# -------------------------------------------------------------------------

FACTORY_DEF * TeeFactory   FACTORY_NAME "Final Output Nuker"   INPUT FEATURE_TYPE __nuke_me__

